<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" InitialTargets="CheckDependencies" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{60BDB847-D0C4-4FD3-A947-0C15C08BCDB5}</ProjectGuid>
    <RootNamespace>Math</RootNamespace>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <TargetName>Cntk.Math-$(CntkComponentVersion)</TargetName>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <AdditionalIncludeDirectories>$(MathIncludePath);$(BOOST_INCLUDE_PATH);$(SolutionDir)Source\Common\include;$(SolutionDir)Source\CNTKv2LibraryDll\API;$(CudaInclude);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>$(MathDefine);NO_SYNC;WIN32;_WINDOWS;_USRDLL;MATH_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <DisableSpecificWarnings>4819</DisableSpecificWarnings>
      <FloatingPointModel>Fast</FloatingPointModel>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <AdditionalDependencies>$(MathLinkLibrary);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(MathLibraryPath);$(OutDir);$(CudaLibPath)</AdditionalLibraryDirectories>
      <SubSystem>Console</SubSystem>
      <DelayLoadDLLs>$(MathDelayLoad);$(CudaDlls);%(DelayLoadDLLs)</DelayLoadDLLs>
    </Link>
    <PostBuildEvent Condition="'$(MathPostBuildCopyPattern)'!=''">
      <Message>Copying $(MathLibraryName) DLLs</Message>
      <Command>xcopy /D /I /Y "$(MathPostBuildCopyPattern)" "$(OutDir)"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="$(DebugBuild)">
    <CudaCompile>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <CodeGeneration>$(NvidiaCompute)</CodeGeneration>
      <CudaRuntime>None</CudaRuntime>
      <NvccCompilation>compile</NvccCompilation>
      <GenerateLineInfo>true</GenerateLineInfo>
    </CudaCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="$(ReleaseBuild)">
    <ClCompile>
      <EnableParallelCodeGeneration>true</EnableParallelCodeGeneration>
      <FloatingPointExceptions>false</FloatingPointExceptions>
    </ClCompile>
    <CudaCompile>
      <FastMath>true</FastMath>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <CodeGeneration>$(NvidiaCompute)</CodeGeneration>
      <GPUDebugInfo>true</GPUDebugInfo>
      <GenerateLineInfo>true</GenerateLineInfo>
      <HostDebugInfo>true</HostDebugInfo>
    </CudaCompile>
    <CudaLink>
      <Optimization>O3</Optimization>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="..\Common\Include\TensorShape.h" />
    <ClInclude Include="..\Common\Include\File.h" />
    <ClInclude Include="..\Common\Include\fileutil.h" />
    <ClInclude Include="BatchNormalizationEngine.h" />
    <ClInclude Include="CommonMatrix.h" />
    <ClInclude Include="ConvolutionEngine.h" />
    <ClInclude Include="ConvolveGeometry.h" />
    <ClInclude Include="CPUMatrix.h" />
    <ClInclude Include="CPUMatrixTensor.h" />
    <ClInclude Include="CPUMatrixTensorImpl.h" />
    <ClInclude Include="CPURNGHandle.h" />
    <ClInclude Include="DataTransferer.h" />
    <ClInclude Include="MatrixQuantizerImpl.h" />
    <ClInclude Include="MklDnnCommon.h" />
    <ClInclude Include="RNGHandle.h" />
    <ClInclude Include="RNNCommon.h" />
    <ClInclude Include="TensorOps.h" />
    <ClInclude Include="TensorView.h" />
    <ClInclude Include="Quantizers.h" />
    <ClInclude Include="QuantizedOperations.h" />
    <None Include="GPUWatcher.cu" />
    <None Include="GPUWatcher.h">
      <FileType>CppHeader</FileType>
    </None>
    <None Include="GPUSparseMatrix.h">
      <FileType>CppHeader</FileType>
    </None>
    <ClInclude Include="CPUSparseMatrix.h" />
    <ClInclude Include="CUDAPageLockedMemAllocator.h" />
    <ClInclude Include="Helpers.h" />
    <ClInclude Include="Matrix.h" />
    <ClInclude Include="MatrixQuantizerCPU.h" />
    <ClInclude Include="MatrixQuantizerGPU.h" />
    <ClInclude Include="MemAllocator.h" />
    <ClInclude Include="QuantizedMatrix.h" />
    <ClInclude Include="stdafx.h" />
    <ClInclude Include="targetver.h" />
    <ClInclude Include="CPUMatrixImpl.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="BatchNormalizationEngine.cpp" />
    <ClCompile Include="ConvolutionEngine.cpp" />
    <ClCompile Include="CPUMatrixDouble.cpp" />
    <ClCompile Include="CPUMatrixFloat.cpp" />
    <ClCompile Include="CPUMatrixHalf.cpp" />
    <ClCompile Include="CPUMatrixTensorDouble.cpp" />
    <ClCompile Include="CPUMatrixTensorFloat.cpp" />
    <ClCompile Include="CPUMatrixTensorHalf.cpp" />
    <ClCompile Include="CPUMatrixTensorSpecial.cpp" />
    <ClCompile Include="CPURNGHandle.cpp" />
    <ClCompile Include="CPUSparseMatrix.cpp" />
    <ClCompile Include="CUDAPageLockedMemAllocator.cpp" />
    <ClCompile Include="DataTransferer.cpp" />
    <ClCompile Include="dllmain.cpp" />
    <ClCompile Include="MatrixQuantizerCPU.cpp" />
    <ClCompile Include="MatrixQuantizerImpl.cpp" />
    <ClCompile Include="NoGPU.cpp" />
    <ClCompile Include="Matrix.cpp" />
    <ClCompile Include="QuantizedMatrix.cpp" />
    <ClCompile Include="RNGHandle.cpp" />
    <ClCompile Include="stdafx.cpp">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="TensorView.cpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include="GPUMatrix.h" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Common\Common.vcxproj">
      <Project>{86883653-8a61-4038-81a0-2379fae4200a}</Project>
    </ProjectReference>
    <ProjectReference Include="MathCUDA.vcxproj">
      <Project>{b3dd765e-694e-4494-bad7-37bbf2942517}</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets" />
  <Target Name="CheckDependencies">
    <Error Condition="'$(MathLibrary)' == 'MKL' And '$(MKL_PATH)' == ''" Text="MKL location not specified, see https://docs.microsoft.com/en-us/cognitive-toolkit/Setup-CNTK-on-Windows#mkl for instructions." />
    <Error Condition="!$(HasBoost)" Text="The Boost library is required to build. Please see https://docs.microsoft.com/en-us/cognitive-toolkit/Setup-CNTK-on-Windows#boost for installation instructions." />
  </Target>
</Project>